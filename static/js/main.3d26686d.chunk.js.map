{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d26686d.chunk.js","sourcesContent":["import React , {useState} from 'react';\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) =>{\n\n    \n\n\n    const [enteredTitle,setEnteredTitle] = useState('');\n    useState('');\n    const titleChangeHandler = (event) =>{\n    setEnteredTitle(event.target.value);\n\n    };\n\n    const [enteredAmount,setEnteredAmount] = useState('');\n    useState('');\n    const amountChangeHandler = (event) =>{\n        setEnteredAmount(event.target.value)\n    }\n\n    const [enteredDate,setEnteredDate] = useState('');\n    useState('');\n    const dateChangeHandler = (event) =>{\n        setEnteredDate(event.target.value);\n    }\n//we stored the changes\n\n\n    const submitHandler = (event) =>{\n        event.preventDefault();\n\n        const expenseData = {\n            title :enteredTitle,\n            amount : enteredAmount,\n            date :new Date (enteredDate),\n        };\n\n        props.onSaveExpenseData(expenseData);\n\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n        //when we reload for being empty\n    }\n     \n    return (\n        <form onSubmit ={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange ={titleChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type=\"number\" value={enteredAmount} min ='0.01' step =\"0.01\" onChange ={amountChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type=\"date\" value={enteredDate} min = '2019-01-01' max = \"2022-12-31\" onChange ={dateChangeHandler}/>\n                </div>\n            </div>\n\n            <div className = \"new-expense__actions\">\n                <button type =\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n\n            </div>\n\n            \n        </form>\n    )\n}\n\nexport default ExpenseForm;","import React, {useState} from \"react\";\nimport ExpenseForm from './ExpenseForm'\n\nimport './NewExpense.css'\n\nconst NewExpense = (props) =>{\n    const[isEditing, setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpenseData) =>{\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n\n    return <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        \n    </div>\n\n};\n\nexport default NewExpense;\n","import './Card.css';\n\nfunction Card(props){\n    const classes ='card ' + props.className;\n    return <div className={classes}>{props.children}</div>;\n\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n    const dropdownChangeHandler =(event) =>{\n      props.onChangeFilter(event.target.value)\n    };\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value ={props.selected} onChange = {dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\n\nfunction ExpenseDate (props) {\n    const month = props.date.toLocaleString('en-US',{month:'long'});\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\n    const year = props.date.getFullYear();\n    return (\n    <div className=\"expense-date\">\n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__year\">{year}</div>\n        <div className=\"expense-date__day\">{day}</div>\n    </div>\n\n    );\n\n}\n\nexport default ExpenseDate;","import React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n\n  if(props.items.length === 0){\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react'\nimport './Chart.css';\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint =>dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n    return (\n    <div className=\"chart\">\n        {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n        key = {dataPoint.label}\n         value={dataPoint.value} \n         maxValue={totalMaximum} \n         label ={dataPoint.label}/> ))}\n    </div>\n        );\n   \n        };\n\nexport default Chart;\n","import React from 'react'\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        {label:'Jan',value:0},\n        {label:'Feb',value:0},\n        {label:'Mar',value:0},\n        {label:'Apr',value:0},\n        {label:'May',value:0},\n        {label:'Jun',value:0},\n        {label:'Jul',value:0},\n        {label:'Aug',value:0},\n        {label:'Sep',value:0},\n        {label:'Oct',value:0},\n        {label:'Nov',value:0}, \n        {label:'Dec',value:0}, \n        \n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n\n    }\n\n\n\n    return (\n        <Chart dataPoints = {chartDataPoints}/>\n        \n    )\n}\n\nexport default ExpensesChart;\n","import React, {useState} from 'react';\nimport './Expenses.css';\nimport Card from '../UI/Card'\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart'\n\nconst Expenses =  (props) =>{\n\n  const [filteredYear,setFilteredYear]=useState('2020');\n\n  const filterChangeHandler = selectedYear =>{\n    setFilteredYear(selectedYear);\n  }\n  const filteredExpenses = props.items.filter(expense =>{\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  \n    return(\n      <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter selected ={filteredYear} onChangeFilter = {filterChangeHandler}/>\n        <ExpensesChart expenses = {filteredExpenses}/>\n        <ExpensesList items ={filteredExpenses}/>\n        \n        \n\n      {/* <ExpenseItem title={props.items[0].title} amount = {props.items[0].amount} date ={props.items[0].date}/>\n      <ExpenseItem title={props.items[1].title} amount = {props.items[1].amount} date ={props.items[1].date}/>\n      <ExpenseItem title={props.items[2].title} amount = {props.items[2].amount} date ={props.items[2].date}/>\n      <ExpenseItem title={props.items[3].title} amount = {props.items[3].amount} date ={props.items[3].date}/> */}\n        </Card>\n        </div>\n        \n    );\n};\n\nexport default Expenses;","\nimport React, {useState} from 'react';\nimport NewExpense  from './components/NewExpense/NewExpense.js';\nimport Expenses from './components/Expenses/Expenses.js';\nimport './App.css';\n\n\n  \nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES)\n\nconst addExpenseHandler = (expense) =>{\n  setExpenses((prevExpenses) =>{\n    return [expense,...prevExpenses];\n  });\n\n};\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense = {addExpenseHandler}/>\n      <Expenses items={expenses} />\n\n      \n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}